[comment encoding = UTF-8 /]
[**
 * 
 *  Copyright (c) 2013 Jean-Marie Gauthier and University of Franche-Comte
 *  All rights reserved. This program and the accompanying materials
 *  are made available under the terms of the Eclipse Public License v1.0
 *  which accompanies this distribution, and is available at
 *  http://www.eclipse.org/legal/epl-v10.html
 *  
 *  Contributors:
 *      Jean-Marie Gauthier and University of Franche-Comte - initial API and implementation
 *
 */]

[module generateModelica('http://www.femto-st.fr/disc/Modelica.ecore')]
[import edu::ufc::femtost::disc::sysml4modelica::codegen::files::generatePackage/]
[import edu::ufc::femtost::disc::sysml4modelica::codegen::files::generateModelicaClassDefinition/]

[**
 * The documentation of the template generateModelica.
 * @param aModelicaModel
 */]
[template public generateModelica(aModelicaModel : ModelicaModel)]
[comment @main/]
[file ('/'+aModelicaModel.name+'/package.mo', false, 'UTF-8')]
package [aModelicaModel.name/]
	annotation(Diagram(coordinateSystem(extent = {{-148.5,-105.0},{148.5,105.0}}, preserveAspectRatio = true, initialScale = 0.1, grid = {10,10})), Icon(graphics = {Rectangle(rotation = 0, lineColor = {0,0,0}, fillColor = {190,224,255}, pattern = LinePattern.Solid, fillPattern = FillPattern.Solid, lineThickness = 0.25, extent = {{-100,-58.5379},{100,58.5379}}),Rectangle(rotation = 0, lineColor = {0,0,0}, fillColor = {255,255,255}, pattern = LinePattern.Solid, fillPattern = FillPattern.Solid, lineThickness = 0.25, extent = {{-100.06,58.5379},{-10.0595,91.46210000000001}}),Text(rotation = 0, lineColor = {0,0,0}, fillColor = {0,0,0}, pattern = LinePattern.Solid, fillPattern = FillPattern.Solid, lineThickness = 0.25, extent = {{-94.73,-51.0937},{91.7538,-25.6921}}, textString = "Name", fontName = "Arial", textStyle = {TextStyle.Bold}),Polygon(points = {{37.2048,27.4641},{89.16079999999999,-16.4106},{-11.1869,-16.4106}}, rotation = 0, lineColor = {0,0,0}, fillColor = {255,255,255}, pattern = LinePattern.Solid, fillPattern = FillPattern.Solid, lineThickness = 0.25)}));
end [aModelicaModel.name/];
[/file]

[for (aModelicaClassDefinition : ModelicaClassDefinition | aModelicaModel.modelicaClasses)]
[if(aModelicaClassDefinition.oclIsTypeOf(Package))][generatePackage(aModelicaClassDefinition.oclAsType(Package))/][/if]
[/for]

[for (aModelicaClassDefinition : ModelicaClassDefinition | aModelicaModel.modelicaClasses->select(mc | not mc.oclIsTypeOf(Package)))]
[generateModelicaClassDefinition(aModelicaClassDefinition)/]
[/for]

[/template]
