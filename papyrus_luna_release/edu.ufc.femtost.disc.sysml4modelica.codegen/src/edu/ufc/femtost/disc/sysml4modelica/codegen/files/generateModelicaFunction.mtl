[comment encoding = UTF-8 /]
[**
 * 
 *  Copyright (c) 2013 Jean-Marie Gauthier and University of Franche-Comte
 *  All rights reserved. This program and the accompanying materials
 *  are made available under the terms of the Eclipse Public License v1.0
 *  which accompanies this distribution, and is available at
 *  http://www.eclipse.org/legal/epl-v10.html
 *  
 *  Contributors:
 *      Jean-Marie Gauthier and University of Franche-Comte - initial API and implementation
 *
 */]
[module generateModelicaFunction('http://www.femto-st.fr/disc/Modelica.ecore')]


[**
 * The documentation of the template generateModelicaFunction.
 * @param aFunction
 */]
[template public generateModelicaFunction(aFunction : Function)]
	function [aFunction.name/]
	[for (aModelicaFunctionParameter : ModelicaFunctionParameter | aFunction.parameters->select(p | not p.isProtected))][generateModelicaFunctionParameter(aModelicaFunctionParameter)/]
	[/for]
	[if (aFunction.parameters->exists(p | p.isProtected))]protected
	[for (aModelicaFunctionParameter : ModelicaFunctionParameter | aFunction.parameters->select(p | p.isProtected))][generateModelicaFunctionParameter(aModelicaFunctionParameter)/]
	[/for][/if]
	[for (aModelicaAlgorithm : AlgorithmSection | aFunction.algorithmSections)][generateModelicaAlgorithmSection(aModelicaAlgorithm)/]
	[/for]
	end [aFunction.name/];
[/template]

[template public generateModelicaFunctionParameter(aModelicaFunctionParameter : ModelicaFunctionParameter)]
	[if (not aModelicaFunctionParameter.causality.toString().contains('none'))][aModelicaFunctionParameter.causality.toString()/][/if][if(aModelicaFunctionParameter.variability.toString().contains('constant'))]constant[/if] [aModelicaFunctionParameter.type_specifier/] [aModelicaFunctionParameter.name/][if(not aModelicaFunctionParameter.default_value.oclIsUndefined())] = [aModelicaFunctionParameter.default_value.toString()/][/if];
[/template]

[template public generateModelicaAlgorithmSection(aModelicaAlgorithmSection : AlgorithmSection)]
	algorithm
		[for(aModelicaAlgorithm : Algorithm | aModelicaAlgorithmSection.algorithm)][generateAlgorithm(aModelicaAlgorithm)/][/for]
[/template]

[template public generateAlgorithm(aModelicaAlgorithm: Algorithm)]
[aModelicaAlgorithm._body/]
[/template]